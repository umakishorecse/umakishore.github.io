{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/records.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'firstapi';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { RouterModule,Routes} from '@angular/router';\nimport {RecordsService} from './records.service';\nimport { HttpClientModule} from '@angular/common/http'\n\nconst appRoutes:Routes=[\n  {\n    path:'',\n    component:LoginComponent\n  },\n  {\n    path:'dashboard',\n    component:DashboardComponent\n  }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule\n  ],\n  providers: [RecordsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<table>\\n  <tr>\\n    <td>Id</td>\\n    <td>Name</td>\\n  </tr>\\n  <tr *ngFor=\\\"let record of records\\\">\\n    {{record.id}}\\n    {{record.name}}\\n  </tr>\\n  </table>\\n\\n<!-- <div *ngFor=\\\"let record of records\\\">\\n    {{record.id}}\\n    {{record.name}}\\n</div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { RecordsService } from '../records.service'\n// interface myData{\n//   obj:Object\n// }\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n records = {}\n  constructor(private RecordService: RecordsService) { }\n\n  ngOnInit() {\n      this.RecordService.getData().subscribe(data => {\n      this.records = data\n     \n     //var bookCount = Object.keys(b).length;\n   })\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container text-center\\\">\\n  <form (submit)=\\\"loginsub($event)\\\">\\n  <div class=\\\"input\\\">\\n    <label>username</label>\\n    <input type=\\\"text\\\">\\n  </div>  \\n  <div class=\\\"input\\\">\\n      <label>password</label>\\n      <input type=\\\"password\\\">\\n    </div>\\n    <div class=\\\"input\\\">\\n     \\n        <input type=\\\"submit\\\" value=\\\"submit\\\">\\n      </div> \\n  </form>\\n  \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit() {\n\n  }\n  loginsub(e){\n    e.preventDefault();\n    var username = e.target.elements[0].value;\n    var password = e.target.elements[1].value;\n    if(username == 'admin' && password =='admin')\n    {\n      alert(\"success\");\n      this.router.navigate(['dashboard']);\n      \n    }\n    else\n    {\n      alert(\"fail\");\n    }\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable()\n\n// ({\n//   providedIn: 'root'\n// })\nexport class RecordsService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  getData()\n  {\n     return this.http.get('https://jsonplaceholder.typicode.com/users');\n     \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}